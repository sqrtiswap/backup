#!/bin/ksh

if command -v rsync > /dev/null ; then
	RSYNC='rsync'
else
	RSYNC='openrsync'
fi

backup() {
	if [ -n "$2" ] ; then
		_mntpoint="$2"
	else
		exit 1
	fi

	set -A dirlist Downloads \
		Emails \
		Pictures \
		Wichtig \
		bin \
		documents \
		dotfiles \
		inbox \
		man \
		media \
		sources

	nr=${#dirlist[@]}
	i=0

	for d in "${dirlist[@]}"; do
		i=$((i+1))
		"$RSYNC" -av --delete "$HOME"/"$d" "${_mntpoint}" \
			&& echo "\033[32m--- synced $i/${nr} ---\033[0m" \
			|| exit 1
		echo "$d: $(find "$HOME"/"$d" -type f | wc -l)" >> "$HOME"/checkfilenumber-src.txt
		echo "$d: $(find "${_mntpoint}"/"$d" -type f | wc -l)" >> "$HOME"/checkfilenumber-dest.txt
	done
	[ -f "$HOME"/mbox ] && cp "$HOME"/mbox "${_mntpoint}"

	echo "Check file number:"
	diff "$HOME"/checkfilenumber-src.txt "$HOME"/checkfilenumber-dest.txt \
		&& echo "\033[32m--- file number is consistent. ---\033[0m" \
		&& rm "$HOME"/checkfilenumber-*.txt
}

check_bitrot() {
	set -A checklist Pictures \
		Wichtig \
		documents \
		media
	nr=${#checklist[@]}
	i=0
	for d in "${checklist[@]}"; do
		i=$((i+1))
		cd "$HOME"/"$d" && bitrot \
			&& echo "\033[32m--- checked bitrot $i/${nr} ($HOME/$d) ---\033[0m" \
			|| exit 1
	done
}

scan_collection() {
	echo "Scan collected dotfiles:"
	doas freshclam && clamscan -riz --scan-pdf=yes "${_dotdir}"
}

collect_dotfiles() {
	#set -e

	_fail="\033[31m"
	_good="\033[32m"
	_rset="\033[0m"

	mkdir -p "${_dotdir}" \
		&& echo "${_good}[1/6] ----- Created ${_dotdir}.${_rset}" \
		|| echo "${_fail}[1/6] ----- Creating ${_dotdir} failed.${_rset}"

	_backupscripts="$HOME"/sources/backup

	"${_backupscripts}"/collect_config \
		&& echo "${_good}[2/6] ----- Collected configurations.${_rset}" \
		|| echo "${_fail}[2/6] ----- Collecting configurations failed.${_rset}"

	"${_backupscripts}"/collect_privconfig \
		&& echo "${_good}[3/6] ----- Collected privileged configurations.${_rset}" \
		|| echo "${_fail}[3/6] ----- Collecting privileged configurations failed.${_rset}"

	"${_backupscripts}"/collect_installs \
		&& echo "${_good}[4/6] ----- Created list of installed packages.${_rset}" \
		|| echo "${_fail}[4/6] ----- Creating list of installed packages failed.${_rset}"

	"${_backupscripts}"/collect_data \
		&& echo "${_good}[5/6] ----- Collected data.${_rset}" \
		|| echo "${_fail}[5/6] ----- Collecting data failed.${_rset}"

	scan_collection \
		&& echo "${_good}[6/6] ----- Clamscan: No infected files found.${_rset}" \
		|| echo "${_fail}[6/6] ----- Clamscan: Infected files found.${_rset}"

	#set +e
}

prepare_backup() {
	if pgrep mutt > /dev/null ; then
		echo "mutt is still running." && exit 1
	fi
}

prepare_collecting_dotfiles() {
	if pgrep mutt > /dev/null ; then
		echo "mutt is still running." && exit 1
	else
		_dotdir="$HOME"/dotfiles/"$(date +%F)"
		[ -d "${_dotdir}" ] \
			&& echo "${_dotdir} already exists. Do some clean-up!" && exit 1
	fi
}

usage() {
	echo "backup has options:
all	[dir]	-> backup all directories to [dir]
bitrot		-> check for bitrot in selected directories
dotfiles	-> collect dotfiles"
exit 1
}

case $1 in
all)
	prepare_backup
	backup "$@"
	;;
bitrot)
	check_bitrot
	;;
dotfiles)
	prepare_collecting_dotfiles
	collect_dotfiles
	;;
*)
	usage
	;;
esac
